/* This file has been generated using ris, do not modify! */
#include "resource.h"
#include <unordered_map>
#include <bundle.hpp>
namespace test {
std::string Resource::string_test() {
    static char const literal[] = {
        112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::binary_file_test() {
    static char const literal[] = {
        49, 50, 51, 10, 49, 50, 51, 10, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::itself() {
    static char const literal[] = {
        123, 10, 32, 32, 32, 34, 104, 101, 97, 100, 101, 114, 34, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 104, 34, 44, 10, 32, 32, 32, 34, 110, 97, 109, 101, 115, 112, 97, 99, 101, 34, 58, 32, 34, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 34, 99, 108, 97, 115, 115, 34, 58, 32, 34, 82, 101, 115, 111, 117, 114, 99, 101, 34, 44, 10, 32, 32, 32, 34, 114, 101, 115, 
        111, 117, 114, 99, 101, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 115, 116, 114, 105, 110, 103, 95, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 
        95, 116, 121, 112, 101, 34, 58, 32, 34, 115, 116, 114, 105, 110, 103, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 98, 105, 110, 97, 114, 121, 95, 102, 105, 108, 101, 95, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 101, 115, 116, 46, 98, 105, 110, 34, 
        44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 58, 32, 34, 102, 105, 108, 101, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 105, 116, 115, 101, 108, 102, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 101, 115, 
        116, 46, 106, 115, 111, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 58, 32, 34, 102, 105, 108, 101, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 34, 58, 32, 34, 76, 90, 52, 70, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 
        97, 109, 101, 34, 58, 32, 34, 105, 116, 115, 101, 108, 102, 95, 112, 97, 99, 107, 101, 100, 95, 108, 122, 52, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 101, 115, 116, 46, 106, 115, 111, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 58, 32, 34, 102, 105, 108, 101, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 
        32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 109, 101, 109, 98, 101, 114, 95, 110, 97, 109, 101, 34, 58, 32, 34, 99, 117, 115, 116, 111, 109, 95, 109, 101, 109, 98, 101, 114, 95, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 99, 117, 115, 116, 111, 109, 46, 109, 101, 109, 98, 101, 114, 47, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 
        32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 58, 32, 34, 115, 116, 114, 105, 110, 103, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 109, 117, 108, 116, 105, 108, 105, 110, 101, 95, 101, 120, 97, 
        109, 112, 108, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 116, 104, 101, 115, 101, 32, 97, 114, 101, 92, 110, 92, 110, 116, 104, 114, 101, 101, 32, 108, 105, 110, 101, 115, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 95, 116, 121, 112, 101, 34, 58, 32, 34, 115, 116, 114, 105, 110, 103, 34, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 93, 44, 
        10, 32, 32, 32, 34, 115, 111, 117, 114, 99, 101, 34, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 99, 112, 112, 34, 10, 125, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::itself_packed_lz4() {
    static char const literal[] = {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 2, -78, 7, -107, 3, -15, 29, 123, 10, 32, 32, 32, 34, 104, 101, 97, 100, 101, 114, 34, 58, 32, 34, 97, 99, 99, 101, 112, 116, 97, 110, 99, 101, 95, 116, 101, 115, 116, 47, 114, 101, 115, 111, 117, 114, 99, 101, 46, 104, 34, 44, 43, 0, -112, 110, 97, 109, 101, 115, 112, 97, 99, 101, 46, 0, 0, 35, 0, 3, 24, 0, 80, 99, 
        108, 97, 115, 115, 20, 0, 19, 82, 50, 0, 3, 24, 0, 4, 65, 0, 0, 28, 0, 16, 91, 66, 0, 49, 32, 32, 32, 117, 0, 2, 2, 0, 1, 80, 0, 0, 55, 0, 118, 115, 116, 114, 105, 110, 103, 95, 82, 0, 2, 2, 0, 18, 34, 127, 0, 0, 34, 0, -94, 112, 108, 97, 105, 110, 32, 116, 101, 120, 116, 91, 0, 2, 2, 0, 3, 33, 0, 65, 95, 116, 121, 112, -109, 0, 2, 72, 0, 19, 34, 106, 0, 17, 125, -75, 0, 15, 115, 0, 4, -94, 
        98, 105, 110, 97, 114, 121, 95, 102, 105, 108, -19, 0, 15, 87, 0, 0, 0, 120, 0, 0, -109, 0, 79, 46, 98, 105, 110, 31, 0, 0, 5, 118, 0, 0, 68, 0, 15, 116, 0, 18, 111, 105, 116, 115, 101, 108, 102, 75, 0, 0, 5, 106, 0, 63, 106, 115, 111, 107, 0, 43, -80, 99, 111, 109, 112, 114, 101, 115, 115, 105, 111, 110, 85, 0, 73, 76, 90, 52, 70, 112, 0, 4, 114, 1, 2, -117, 0, -71, 95, 112, 97, 99, 107, 101, 100, 95, 108, 122, 52, 38, 
        0, 6, 120, 1, 1, 0, 1, 15, -106, 0, 46, 116, 109, 101, 109, 98, 101, 114, 95, 125, 0, 120, 99, 117, 115, 116, 111, 109, 95, 22, 0, 4, -85, 1, 0, -111, 2, 10, 39, 0, 18, 46, 39, 0, 17, 47, 22, 0, 8, 39, 0, 10, -91, 0, 15, -64, 0, 0, 5, -95, 1, 15, 23, 2, 24, -1, 1, 109, 117, 108, 116, 105, 108, 105, 110, 101, 95, 101, 120, 97, 109, 112, 108, 115, 0, 6, -16, 3, 104, 101, 115, 101, 32, 97, 114, 101, 92, 110, 92, 110, 
        116, 104, 114, 101, 101, 32, 54, 0, 31, 115, -121, 0, 24, 0, -90, 2, 17, 93, -47, 0, 3, -57, 2, 0, -79, 1, 15, -125, 3, 6, 96, 99, 112, 112, 34, 10, 125, 
    };
    return bundle::unpack(std::string(literal, sizeof(literal)/sizeof(char)));
}
std::string Resource::custom_member_name() {
    static char const literal[] = {
        116, 101, 115, 116, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::multiline_example() {
    static char const literal[] = {
        116, 104, 101, 115, 101, 32, 97, 114, 101, 10, 10, 116, 104, 114, 101, 101, 32, 108, 105, 110, 101, 115, 
    };
    return std::string(literal, sizeof(literal)/sizeof(char));
}
std::string Resource::Get(std::string const& key) {
    static std::unordered_map<std::string,ResourceGetter> getters = {
        { "string_test", Resource::string_test },
        { "binary_file_test", Resource::binary_file_test },
        { "itself", Resource::itself },
        { "itself_packed_lz4", Resource::itself_packed_lz4 },
        { "custom.member/name", Resource::custom_member_name },
        { "multiline_example", Resource::multiline_example },
    };
    auto getter = getters.find(key);
    if (getter == getters.end())
         return OnNoKey(key);
    return getter->second();
}
}
